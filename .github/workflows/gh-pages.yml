  # This is a workflow to deploy github pages

  name: github pages

  # Controls when the action will run.
  on:
    # Triggers the workflow on push or pull request events but only for the master branch
    push:
      branches:
        - master

  # A workflow run is made up of one or more jobs that can run sequentially or in parallel
  jobs:
    # This workflow contains a single job called "build"
    deploy:
      # The type of runner that the job will run on
      runs-on: ubuntu-latest

      # Steps represent a sequence of tasks that will be executed as part of the job
      steps:
        # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
        - uses: actions/checkout@v2
          with:
            submodules: true  # Fetch Hugo themes (true OR recursive)
            fetch-depth: 0    # Fetch all history for .GitInfo and .Lastmod
        - uses: actions/setup-node@v2
          with:
            node-version: '16'

        # Runs a single command using the runners shell
        - name: Setup Hugo
          uses: peaceiris/actions-hugo@v2
          with:
            hugo-version: '0.78.2'
            extended: true

        - name: Build package
          run: npm install

        - name: Build
          run: hugo --minify

        - name: Deploy
          uses: peaceiris/actions-gh-pages@v3
          with:
            github_token: ${{ secrets.GITHUB_TOKEN }}
            publish_dir: ./public
            
        # - name : Black Duck Synopsys Detect
        #   run: |
        #     bash <(curl -s -L https://detect.synopsys.com/detect8.sh) \
        #     --blackduck.url="${{ secrets.BLACKDUCK_URL }}" \
        #     --blackduck.api.token="${{ secrets.BLACKDUCK_API_TOKEN }}" \
        #     --blackduck.trust.cert=true \
        #     --detect.project.name=sktelecom.github.io \
        #     --detect.project.version.name=1.0.0 \
        #     --detect.blackduck.signature.scanner.snippet.matching=SNIPPET_MATCHING \
        #     --detect.blackduck.signature.scanner.upload.source.mode=true \
        #     --detect.clone.project.version.latest=true \
        #     --detect.project.tags=TYPE_web_service,CI_github \
        #     --detect.project.version.distribution=SAAS \
        #     --detect.excluded.detector.types=RUBYGEMS
